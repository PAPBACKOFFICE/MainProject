@page "/Pedidos/Detalhes/{Id:int}"

<h3>Pedidos</h3>
@if (pedido != null)
{
    <h4>@pedido.Assunto</h4>
}
<Row>
    <Column ColumnSize="ColumnSize.Is3">
        <div class="card">
            <div class="card-body">
                @if (pedido != null)
                {
                    <PedidosForm @bind-Pedido="pedido" IsCreating="false"></PedidosForm>
                }
            </div>
        </div>
    </Column>
    <Column ColumnSize="ColumnSize.Is9">
        <Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
            <Items>
                <Tab Name="pedidos">Colaboradores</Tab>
                <Tab Name="actividade">Actividade</Tab>
            </Items>
            <Content>
                <TabPanel Name="pedidos">
                    <div class="card">
                        <div class="card-body">
                            @if (Pedidos != null)
                            {
                                <Table>
                                    <TableHeader>
                                        <TableRow>
                                            <TableHeaderCell>#</TableHeaderCell>
                                            <TableHeaderCell>Nome</TableHeaderCell>
                                            <TableHeaderCell>Função</TableHeaderCell>
                                            <TableHeaderCell> Telefone</TableHeaderCell>
                                            <TableHeaderCell> Email</TableHeaderCell>
                                        </TableRow>
                                    </TableHeader>
                                    <TableBody>
                                        @foreach (var Pedido in Pedidos)
                                        {
                                        <TableRow>
                                            <TableRowHeader>@Colaborador.Id</TableRowHeader>
                                            <TableRowHeader>@Colaborador.Nome</TableRowHeader>
                                            <TableRowCell>@Colaborador.Funcao</TableRowCell>
                                            <TableRowCell>@Colaborador.Telefone</TableRowCell>
                                            <TableRowCell>@Colaborador.Email</TableRowCell>
                                        </TableRow>
                                        }
                                    </TableBody>
                                    @if (Pedidos == null || Pedidos.Count == 0)
                                    {
                                        <TableFooter>
                                            <TableRow Class="text-center">
                                                <TableRowCell ColumnSpan="4">Não existem Colaborador para este pedido . Ainda...</TableRowCell>
                                            </TableRow>
                                        </TableFooter>
                                    }
                                </Table>
                            }
                        </div>
                        <div class="card-footer">
                        </div>
                    </div>
                </TabPanel>
                <TabPanel Name="actividade">
                    <div class="card">
                        <div class="card-body">

                        </div>
                        <div class="card-footer">

                        </div>
                    </div>
                </TabPanel>
            </Content>
        </Tabs>
    </Column>
</Row>

@code {

    [Inject]
    public IDbContextFactory<AppDatabaseContext> dbContextFactory { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Inject]
    public IToastService ToastService { get; set; }

    protected Validations Validator;

    private Colaborador Colaborador = null;

    private Pedido pedido = null;

    private List<Colaborador> Colaboradors;

    private List<Pedido> Pedidos = null;

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            using var context = dbContextFactory.CreateDbContext();

            pedido = await context.Pedido
                .Include(m => m.Colaborador)
                .FirstOrDefaultAsync(m => m.Id == Id);

            Colaborador = await context.Colaborador
                         .Include(m => m.Empresa)
                         .FirstOrDefaultAsync(m => m.Id == Id);

            Pedidos = await context.Pedido
             .Where(m => m.ColaboradorId == Id)
             .Include(m => m.PedidoEstado)
             .ToListAsync();

        }
    }

    string selectedTab = "pedidos";

    private void OnSelectedTabChanged(string name)
    {
        selectedTab = name;
    }
}
