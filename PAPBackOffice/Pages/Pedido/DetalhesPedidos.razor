@page "/Pedidos/Detalhes/{Id:int}"

@attribute [Authorize]

<h3>Pedidos</h3>
@if (Pedido != null)
{
    <h4>@Pedido.Assunto</h4>
}
<Row>
    <Column ColumnSize="ColumnSize.Is3.OnDesktop">
        <div class="card">
            <div class="card-body">
                @if (Pedido != null)
                {
                    <PedidosForm @bind-Pedido="Pedido" IsCreating="false"></PedidosForm>
                }
            </div>
        </div>
    </Column>
    <Column ColumnSize="ColumnSize.Is9.OnDesktop">
        <Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
            <Items>
                <Tab Name="comentarios">Comentários</Tab>
                <Tab Name="actividade">Actividade</Tab>
            </Items>
            <Content>
                <TabPanel Name="comentarios">
                    <div class="card">
                        <div class="card-body">
                            <ListarPedidoComentario PedidoId="@Id" />
                        </div>
                        <div class="card-footer">

                        </div>
                    </div>
                </TabPanel>
                <TabPanel Name="actividade">
                    <div class="card">
                        <div class="card-body">
                            
                        </div>
                        <div class="card-footer">

                        </div>
                    </div>
                </TabPanel>
            </Content>
        </Tabs>
    </Column>
</Row>

@code {

    [Inject]
    public IDbContextFactory<AppDatabaseContext> dbContextFactory { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Inject]
    public IToastService ToastService { get; set; }

    protected Validations Validator;

    Pedido Pedido = null;

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            using var context = dbContextFactory.CreateDbContext();

            Pedido = await context.Pedido
                .Include(m => m.Empresa)
                .Include(m => m.Colaborador)
                .Include(m => m.PedidoEstado)
                .Include(m => m.PedidoPrioridade)
                .Include(m => m.PedidoOrigem)
                .FirstOrDefaultAsync(m => m.Id == Id);


        }
    }

    string selectedTab = "comentarios";

    private void OnSelectedTabChanged(string name)
    {
        selectedTab = name;
    }
}
