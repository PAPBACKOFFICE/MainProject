@page "/empresa/listar"
@inject NavigationManager navigationManager
@inject IRepository Repository
@using Microsoft.EntityFrameworkCore

@using Blazorise.DataGrid

@inject IToastService toastService

<h1> I'M TRYING I SWEAR</h1>

<p> Give me a break for god sake </p>
@if (Empresas == null)
{
    <p><em>A processar dados...</em></p>
}
else
{
<DataGrid TItem="Empresa"
          Data="@Empresas"
          ReadData="@OnReadData"
          TotalItems="@NumEmpresas"
          Sortable="true"
          Filterable="true"
          Editable="true"
          ShowPager="true"
          PageSize="15">
    <DataGridCommandColumn TItem="Empresa">
        <NewCommandTemplate>
            <Button Color="Color.Success" @onclick="@(()=> navigationManager.NavigateTo("/empresa/adicionar"))" Clicked="@context.Clicked">Novo</Button>
        </NewCommandTemplate>
        <EditCommandTemplate>
            <Tooltip Text="Editar">
                <Button Color="Color.Primary" Clicked="@context.Clicked"><i class="fa fa-edit"></i></Button>
            </Tooltip>
        </EditCommandTemplate>
        <DeleteCommandTemplate>
            <Tooltip Text="Eliminar">
                <Button Color="Color.Primary" Clicked="@context.Clicked"><i class="fa fa-trash-alt"></i></Button>
            </Tooltip>
        </DeleteCommandTemplate>
    </DataGridCommandColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.Nome)" Caption="Nome" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.NIF)" Caption="NIF" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.Telefone)" Caption="Telefone" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.Website)" Caption="WebSite" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.Morada)" Caption="Morada" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.CodigoPostal)" Caption="Codigo Postal" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.Localidade)" Caption="Localidade" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.CriadoPor)" Caption="Criado Por" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.CriadoEm)" Caption="Criado Em" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.AlteradoPor)" Caption="Alterado Por" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.AlteradoEm)" Caption="Alterado Em" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Empresa" Field="@nameof(Empresa.Activo)" Caption="Activo" Editable="true"></DataGridColumn>
</DataGrid>
}

@code {
    private List<Empresa> Empresas;
    private int NumEmpresas;
    
    protected override async Task OnInitializedAsync()
    {
        Empresas = await Repository.ListAsync<Empresa>();
        //forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    async Task OnReadData(DataGridReadDataEventArgs<Empresa> e)
    {
        // this can be call to anything, in this case we're calling a fictional api
        var response = await Repository.Query<Empresa>()
                .Skip(e.Page * e.PageSize)
                .Take(e.PageSize)
                .ToListAsync();

        //($"some-api/employees?page={e.Page}&pageSize={e.PageSize}");

        Empresas = response; // an actual data for the current page
        NumEmpresas = response.Count; // this is used to tell datagrid how many items are available so that pagination will work

        // always call StateHasChanged!
        StateHasChanged();
    }
}

