@using PAPBackOffice.Pages.Servico 

@page "/Empresa/Detalhes/{Id:int}"

@attribute [Authorize]

@using PAPBackOffice.Pages.Colaborador
@using PAPBackOffice.Pages.Pedido

<h3>Empresa</h3>
@if (Empresa != null)
{
    <h4>@Empresa.Nome</h4>
}

<Row>
    <Column ColumnSize="ColumnSize.Is3.OnDesktop">
        <div class="card">
            <div class="card-body">
                @if (Empresa != null)
                {
                    <EmpresaForm @bind-Empresa="Empresa" IsCreating="false"></EmpresaForm>
                }
            </div>
        </div>
    </Column>
    <Column ColumnSize="ColumnSize.Is9.OnDesktop">
        <Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
            <Items>
                <Tab Name="colaboradores">Colaboradores</Tab>
                <Tab Name="pedidos">Pedidos</Tab>
                <Tab Name="servicos">Serviços</Tab>
                <Tab Name="actividade">Actividade</Tab>
            </Items>
            <Content>
                <TabPanel Name="colaboradores">
                    <div class="card">
                        <div class="card-body">
                            <Button Color="Color.Success" Clicked="@(()=> CriarNovoColaborador = true)">Novo</Button>
                            @if (Colaboradores != null)
                            {
                                <Table>
                                    <TableHeader>
                                        <TableRow>
                                            <TableHeaderCell>#</TableHeaderCell>
                                            <TableHeaderCell>Nome</TableHeaderCell>
                                            <TableHeaderCell>Função</TableHeaderCell>
                                            <TableHeaderCell>Email</TableHeaderCell>
                                        </TableRow>
                                    </TableHeader>
                                    <TableBody>
                                        @foreach (var Colaborador in Colaboradores)
                                        {
                                            <TableRow>
                                                <TableRowHeader>@Colaborador.Id</TableRowHeader>
                                                <TableRowCell>@Colaborador.Nome</TableRowCell>
                                                <TableRowCell>@Colaborador.Funcao</TableRowCell>
                                                <TableRowCell>@Colaborador.Email</TableRowCell>
                                            </TableRow>
                                        }
                                    </TableBody>
                                    @if (Colaboradores == null || Colaboradores.Count == 0)
                                    {
                                        <TableFooter>
                                            <TableRow Class="text-center">
                                                <TableRowCell ColumnSpan="4">Não existem colaboradores. Ainda...</TableRowCell>
                                            </TableRow>
                                        </TableFooter>
                                    }
                                </Table>
                            }
                        </div>
                        <div class="card-footer">
                        </div>
                    </div>
                </TabPanel>
                <TabPanel Name="pedidos">
                    <div class="card">
                        <div class="card-body">
                            <Button Color="Color.Success" Clicked="@(()=> CriarNovoPedido = true)">Novo</Button>
                            @if (Pedidos != null)
                            {
                                <Table>
                                    <TableHeader>
                                        <TableRow>
                                            <TableHeaderCell>#</TableHeaderCell>
                                            <TableHeaderCell>Estado</TableHeaderCell>
                                            <TableHeaderCell>Assunto</TableHeaderCell>
                                            <TableHeaderCell>Alterado Em</TableHeaderCell>
                                            <TableHeaderCell>Colaborador</TableHeaderCell>
                                        </TableRow>
                                    </TableHeader>
                                    <TableBody>
                                        @foreach (var Pedido in Pedidos)
                                        {
                                            <TableRow>
                                                <TableRowHeader>@Pedido.Id</TableRowHeader>
                                                <TableRowCell>@Pedido.PedidoEstado?.Nome</TableRowCell>
                                                <TableRowCell>@Pedido.Assunto</TableRowCell>
                                                <TableRowCell>@Pedido.AlteradoEm</TableRowCell>
                                                <TableRowCell>@Pedido.Colaborador?.Nome</TableRowCell>
                                            </TableRow>
                                        }
                                    </TableBody>
                                    @if (Pedidos == null || Pedidos.Count == 0)
                                    {
                                        <TableFooter>
                                            <TableRow Class="text-center">
                                                <TableRowCell ColumnSpan="4">Não existem pedidos. Ainda...</TableRowCell>
                                            </TableRow>
                                        </TableFooter>
                                    }
                                </Table>
                            }
                        </div>
                        <div class="card-footer">
                        </div>
                    </div>
                </TabPanel>
                <TabPanel Name="servicos">
                    <div class="card">
                        <div class="card-body">
                            <ListaServicosEmpresa CanCreate="true" EmpresaId="Id"></ListaServicosEmpresa>
                        </div>
                        <div class="card-footer">

                        </div>
                    </div>
                </TabPanel>
                <TabPanel Name="actividade">
                    <div class="card">
                        <div class="card-body">

                        </div>
                        <div class="card-footer">

                        </div>
                    </div>
                </TabPanel>
            </Content>
        </Tabs>
    </Column>
</Row>

<AdicionarColaborador @bind-CriarNovoColaborador="CriarNovoColaborador" EmpresaId="Id" CallBack="LoadColaboradores"></AdicionarColaborador>
<AdicionarPedido @bind-CriarNovoPedido="CriarNovoPedido" EmpresaId="Id" CallBack="LoadPedidos"></AdicionarPedido>

@code {

    [Inject]
    public IDbContextFactory<AppDatabaseContext>
    dbContextFactory
    { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Inject]
    public IToastService ToastService { get; set; }

    Empresa Empresa = null;

    List<Colaborador> Colaboradores = null;

    List<Pedido> Pedidos = null;

    List<EmpresaServico> Servicos = null;

    bool CriarNovoColaborador { get; set; }

    bool CriarNovoPedido { get; set; }

    bool CriarNovoServico { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            using var context = dbContextFactory.CreateDbContext();

            // Load da empresa
            Empresa = await context.Empresa.FirstOrDefaultAsync(m => m.Id == Id);

            // Load dos dados relacionados
            await LoadColaboradores();
            await LoadPedidos();
            await LoadServicos();
        }
    }

    async Task LoadColaboradores()
    {
        using var context = dbContextFactory.CreateDbContext();
        Colaboradores = await context.Colaborador.Where(m => m.EmpresaId == Id).ToListAsync();
    }

    async Task LoadPedidos()
    {
        using var context = dbContextFactory.CreateDbContext();
        Pedidos = await context.Pedido
        .Where(m => m.EmpresaId == Id)
        .Include(m => m.PedidoEstado)
        .ToListAsync();
    }

    async Task LoadServicos()
    {
        using var context = dbContextFactory.CreateDbContext();
        Servicos = await context.EmpresaServico
            .Where(m => m.EmpresaId == Id)
            .Include(m => m.Empresa)
            .Include(m => m.EmpresaServicoEstado)
            .ToListAsync();
    }

    string selectedTab = "colaboradores";

    void OnSelectedTabChanged(string name)
    {
        selectedTab = name;
    }
}
