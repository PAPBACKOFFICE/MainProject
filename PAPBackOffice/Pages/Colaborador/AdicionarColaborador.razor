<div class="side-panel-modal @(CriarNovaColaborador ? "open blur" : "")" @onclick="OnClosePanel"></div>

<div class="side-panel @(CriarNovaColaborador ? "open" : "")">
    <header class="side-panel-header">
        <h3>Criar nova empresa</h3>
    </header>
    <div class="side-panel-body">
        <Row>
            <Column>
                <Validations @ref="Validator" Mode="ValidationMode.Manual" ValidateOnLoad="false" Model="@colaborador">
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Empresa:</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <Validation Validator="@ValidarEmpresa">
                                <Select @bind-SelectedValue="@colaborador.EmpresaId">
                                    <ChildContent>
                                        <SelectItem Value="0">-</SelectItem>
                                        @if (empresas != null)
                                            foreach (var e in empresas)
                                            {
                                                <SelectItem Value="e.Id">@e.Nome</SelectItem>
                                            }
                                    </ChildContent>
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </Select>
                            </Validation>
                        </FieldBody>
                    </Field>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Nome:</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <Validation>
                                <TextEdit @bind-Text="@colaborador.Nome" Placeholder="Nome">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Validation>
                        </FieldBody>
                    </Field>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Função:</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <TextEdit @bind-Text="@colaborador.Funcao" Placeholder="Função" />
                        </FieldBody>
                    </Field>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Telefone:</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <Validation>
                                <NumericEdit @bind-Value="@colaborador.Telefone">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>

                                </NumericEdit>
                            </Validation>
                        </FieldBody>
                    </Field>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Email:</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <Validation>
                                <TextEdit @bind-Text="@colaborador.Email" Placeholder="Email">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Validation>
                        </FieldBody>
                    </Field>
                    @*<Field Horizontal="true">
                            <FieldLabel ColumnSize="ColumnSize.Is2">Activo:</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.Is10">
                                <Switch @bind-Checked="@Colaborador.Activo" TValue="bool"></Switch>
                            </FieldBody>
                        </Field>*@
                </Validations>
            </Column>
        </Row>
    </div>
    <div class=" side-panel-footer">
        <Button Color="Color.Primary" @onclick="CriarColaborador">Criar</Button>
        <Button Color="Color.Light" @onclick="OnClosePanel">Sair</Button>
    </div>
</div>

@code {

    [Inject]
    public IEmpresaServico EmpresaServico { get; set; }

    [Inject]
    public IColaboradorServico ColaboradorServico { get; set; }

    [Inject]
    public IToastService toastService { get; set; }

    protected Validations Validator;

    [Parameter]
    public bool CriarNovaColaborador { get; set; }

    [Parameter]
    public EventCallback<bool> CriarNovaColaboradorChanged { get; set; }

    [Parameter]
    public EventCallback Refresh { get; set; }

    private Colaborador colaborador = new Colaborador();

    private List<Empresa> empresas;

    protected override void OnInitialized()
    {
        colaborador = new Colaborador();
        empresas = EmpresaServico.ListarTodas();
    }

    protected async Task CriarColaborador()
    {
        if (Validator.ValidateAll())
        {
            var id = ColaboradorServico.CriarColaborador(colaborador);

            if (id != 0)
            {
                await OnClosePanel();
                toastService.ShowSuccess("Colaborador criado com sucesso");
                StateHasChanged();
            }
            else
                toastService.ShowError("Não foi possivel criar o Colaborador.");
        }
    }

    protected async Task OnClosePanel()
    {
        CriarNovaColaborador = false;
        await CriarNovaColaboradorChanged.InvokeAsync(CriarNovaColaborador);
    }

    void ValidarEmpresa(ValidatorEventArgs e)
    {
        var id = Convert.ToInt32(e.Value);

        e.Status = (id != 0) ? ValidationStatus.Success : ValidationStatus.Error;
        e.ErrorText = "A empresa é obrigatório.";
    }
}

