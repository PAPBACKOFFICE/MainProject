@page "/Colaborador/Listar"

@using Microsoft.EntityFrameworkCore
@using Blazorise.DataGrid 

@attribute [Authorize]

@inject NavigationManager navigationManager
@inject IToastService toastService

@*<ul class="breadcrumb">
    <li><a href="#">Home</a> <span class="divider">/</span></li>
    <li><a href="#">Colaborador</a> <span class="divider">/</span></li>
    <li class="active">Listar</li>
</ul>*@
<h1>Colaboradores - Clientes</h1>

<DataGrid TItem="Colaborador"
          Data="@Colaboradores"
          ReadData="@OnReadData"
          TotalItems="@NumColaboradores"
          Sortable="false"
          Filterable="false"
          Editable="false"
          ShowPager="true"
          PageSize="15">
    <DataGridCommandColumn TItem="Colaborador">
        <NewCommandTemplate>
            <Button Color="Color.Success" @onclick="@(()=> CriarNovoColaborador = true)" Clicked="@context.Clicked">Novo</Button>
        </NewCommandTemplate>
        <EditCommandTemplate>
            <Tooltip Text="Editar">
                <a href="/Colaborador/Detalhes/@context.Item.Id" class="btn btn-primary"><i class="fa fa-edit"></i></a>
            </Tooltip>
        </EditCommandTemplate>
        <DeleteCommandTemplate>
            <Tooltip Text="Eliminar">
                <Button Color="Color.Primary" @onclick="@(() => InativarColaborador(context.Item.Id))" Clicked="@context.Clicked"><i class="fa fa-trash-alt"></i></Button>
            </Tooltip>
        </DeleteCommandTemplate>
    </DataGridCommandColumn>
    <DataGridColumn TItem="Colaborador" Field="@nameof(Colaborador.Nome)" Caption="Nome" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Colaborador" Field="@nameof(Colaborador.Funcao)" Caption="Função" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Colaborador" Field="@nameof(Colaborador.Telefone)" Caption="Telefone" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Colaborador" Field="@nameof(Colaborador.Email)" Caption="Email" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="Colaborador" Field="@nameof(Colaborador.Empresa)" Caption="Empresa" Editable="true">
        <DisplayTemplate>
            @if ((context as Colaborador)?.Empresa != null)
            {
                @context.Empresa.Nome
            }

        </DisplayTemplate>
    </DataGridColumn>
    <DataGridColumn TItem="Colaborador" Field="@nameof(Colaborador.Activo)" Caption="Activo" Editable="true">
        <DisplayTemplate>
            @if ((context as Colaborador)?.Activo == true)
            {
                <i class="fas fa-check-circle fa-2x text-success"></i>
            }
            else
            {
                <i class="fas fa-times-circle fa-2x text-danger"></i>
            }
        </DisplayTemplate>
    </DataGridColumn>
</DataGrid>

<AdicionarColaborador @bind-CriarNovoColaborador="CriarNovoColaborador" EmpresaId="0"></AdicionarColaborador>

@code {




    [Inject]
    public IDbContextFactory<AppDatabaseContext> contextFactory { get; set; }

    [Inject]
    public IColaboradorServico ColaboradorServico { get; set; }

    protected bool CriarNovoColaborador { get; set; }

    [Parameter]
    public int EmpresaId { get; set; }

    protected List<Colaborador> Colaboradores;
    protected int NumColaboradores;

    protected async Task OnReadData(DataGridReadDataEventArgs<Colaborador> e)
    {
        using (var context = contextFactory.CreateDbContext())
        {
            Colaboradores = await context.Colaborador
                .Include(m => m.Empresa)
                .Skip((e.Page - 1) * e.PageSize)
                .Take(e.PageSize)
                .ToListAsync();

            NumColaboradores = Colaboradores.Count;
        }

        StateHasChanged();
    }

    protected void InativarColaborador(int Id)
    {
        ColaboradorServico.InativarColaborador(Id);
        toastService.ShowSuccess("Colaborador inativado com sucesso");
    }

}