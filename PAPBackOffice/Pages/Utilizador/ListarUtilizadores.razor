@page "/Utilizador/Listar"

<AuthorizeView Roles="Super Administrador">
    <Authorized>
        <h1>Lista de Utilizadores</h1>

        <DataGrid TItem="UserAndRoles"
                  Sortable="true"
                  Filterable="true"
                  Editable="true"
                  Data="@Utilizadores"
                  ReadData="@OnReadData"
                  TotalItems="@NumUtilizadores"
                  ShowPager="true"
                  PageSize="15">
            <DataGridCommandColumn TItem="UserAndRoles">
                <NewCommandTemplate Context="utilizador">
                    <Button Color="Color.Success" @onclick="@(() => CriarNovoUtilizador = true)" Clicked="@utilizador.Clicked">Novo</Button>
                </NewCommandTemplate>
                <EditCommandTemplate Context="utilizador">
                    <Tooltip Text="Editar">
                        <a href="/Utilizador/Detalhes/@utilizador.Item.Id" class="btn btn-primary"><i class="fa fa-edit"></i></a>
                    </Tooltip>
                </EditCommandTemplate>
                <DeleteCommandTemplate Context="utilizador">
                    <Tooltip Text="Eliminar">
                        <Button Color="Color.Primary" Clicked="@utilizador.Clicked"><i class="fa fa-trash-alt"></i></Button>
                    </Tooltip>
                </DeleteCommandTemplate>
            </DataGridCommandColumn>
            <DataGridColumn TItem="UserAndRoles" Field="@nameof(UserAndRoles.Name)" Caption="Nome"></DataGridColumn>
            <DataGridColumn TItem="UserAndRoles" Field="@nameof(UserAndRoles.Roles)" Caption="Cargo"></DataGridColumn>
            <DataGridColumn TItem="UserAndRoles" Field="@nameof(UserAndRoles.Email)" Caption="Email"></DataGridColumn>
            <DataGridColumn TItem="UserAndRoles" Field="@nameof(UserAndRoles.Telefone)" Caption="Telefone"></DataGridColumn>
        </DataGrid>

        <AdicionarUtilizador @bind-CriarNovoUtilizador="CriarNovoUtilizador"></AdicionarUtilizador>

        @code {

            public class UserAndRoles
            {
                public string Id { get; set; }

                public string Name { get; set; }

                public string Email { get; set; }

                public string Telefone { get; set; }

                public string Roles { get; set; }

                public UserAndRoles() { Roles = "-"; }
            }

            [Inject]
            public UserManager<ApplicationUser> UserManager { get; set; }

            List<UserAndRoles> Utilizadores;

            int NumUtilizadores = 0;

            bool CriarNovoUtilizador = false;

            protected async Task OnReadData(DataGridReadDataEventArgs<UserAndRoles> e)
            {
                Utilizadores = await UserManager
                                        .Users
                                        .Select(m => new UserAndRoles()
                                        {
                                            Id = m.Id,
                                            Name = m.Name,
                                            Email = m.Email,
                                            Telefone = m.PhoneNumber
                                        })
                                        .Skip((e.Page - 1) * e.PageSize)
                                        .Take(e.PageSize)
                                        .ToListAsync();

                foreach (var user in Utilizadores)
                {
                    var roles = await UserManager.GetRolesAsync(new ApplicationUser() { Id = user.Id });
                    if (roles != null)
                        user.Roles = string.Join(',', roles);
                }

                NumUtilizadores = Utilizadores.Count;

                StateHasChanged();
            }
        }

    </Authorized>
    <NotAuthorized>
        <NaoAutorizado></NaoAutorizado>
    </NotAuthorized>
</AuthorizeView>
